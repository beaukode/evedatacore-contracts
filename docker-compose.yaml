services:
  foundry:
    image: ghcr.io/foundry-rs/foundry:nightly-d14c09f15a9849fe177d097451919810e5877617
    platform: linux/amd64 # Specify the platform
    entrypoint: anvil --block-time 10 --block-base-fee-per-gas 0 --gas-limit 3000000000 --hardfork cancun --host 0.0.0.0 --port 8545 --state /anvil-data/anvil-state.json
    volumes:
      - world-anvil-data-v2:/anvil-data
    ports:
      - "8545:8545"
    healthcheck:
      test: ["CMD-SHELL", "anvil --help || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
  # deployer:
  #   image: ghcr.io/projectawakening/world-chain-deployer-image:0.1.11
  #   platform: linux/amd64
  #   depends_on:
  #     foundry:
  #       condition: service_healthy
  #   command: "deploy-v2 --rpc-url http://foundry:8545 --private-key 0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80"
  #   environment:
  #     BASE_URI: "http://127.0.0.1:8080/ipfs/"
  #     ERC20_TOKEN_NAME: "TEST TOKEN"
  #     ERC20_TOKEN_SYMBOL: "TEST"
  #     ERC20_INITIAL_SUPPLY: "10000000000"
  #     EVE_TOKEN_NAMESPACE: "test"
  #     EVE_TOKEN_ADMIN: "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266"
  #     ADMIN_ACCOUNTS: "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266"
  #     TENANT: "TEST"
  #     CHARACTER_TYPE_ID: "42000000100"
  #     CHARACTER_VOLUME: "0"
  #     NETWORK_NODE_TYPE_ID: "88092"
  #     NETWORK_NODE_VOLUME: "10"
  #     TYPE_IDS: "42000000200,77917,84556,84955,88086,87160,88093,88094,88068,87162,87161,88067,87120"
  #     ASSEMBLY_TYPE_ID: "84556,84955,88086,88068,88067,87120,87119,88063,88064,88070,88071,88069,77917"
  #     ENERGY_CONSTANT: "10,100,50,20,20,30,10,10,20,20,30,10,100"
  #     FUEL_TYPE_ID: "78437,78515,78516,84868,88319,88335"
  #     FUEL_EFFICIENCY: "90,80,40,40,15,10"
  #     FUEL_VOLUME: "28,28,28,28,28,28"
  #     WORLD_VERSION: "0.1.11"
  #   tty: true
  postgres:
    image: postgres
    environment:
      POSTGRES_PASSWORD: AidaVa7vaeNg0Hae
    ports:
      - 5499:5432
    volumes:
      - world-pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 5s
      timeout: 3s
      retries: 5

  indexer:
    image: node:20-alpine
    entrypoint: npx -y -p @latticexyz/store-indexer postgres-decoded-indexer
    environment:
      DATABASE_URL: "postgres://postgres:AidaVa7vaeNg0Hae@postgres:5432/postgres"
      RPC_WS_URL: "ws://foundry:8545"
      DEBUG: mud:*
    depends_on:
      foundry:
        condition: service_healthy
      postgres:
        condition: service_healthy

volumes:
  world-pgdata:
  world-anvil-data-v2:
